# Do not run this workflow on pull request since this workflow has permission to modify contents.
name: Publish benchmarks

on:
  push:
    branches:
      - main
      - ci/auto-commit-to-benchmark-results-branch

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  publish-benchmarks:
    name: Publish benchmark results
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          ref: benchmark-results
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Run benchmarks
        run: go test ./... -bench="Bench" -count 10 | tee benchmark-result.txt
      - name: Publish benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: 'go'
          output-file-path: benchmark-result.txt
          benchmark-data-dir-path: benchmarks/${{ matrix.os }}
          auto-push: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fail-on-alert: true
          alert-threshold: "150%"

      - name: make dummy dir for previous benchmark results
        run: mkdir -p benchmarks/${{ matrix.os }}/
      - name: create dummy file for previous benchmark results
        run: echo '' > benchmarks/${{ matrix.os }}/results.json
      - name: Create benchmark results json
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: 'go'
          output-file-path: benchmark-result.txt
          #benchmark-data-dir-path: benchmarks/${{ matrix.os }}
          external-data-json-path: benchmarks/${{ matrix.os }}/results.json
          auto-push: false
          fail-on-alert: true
          alert-threshold: "150%"
      - name: tree
        run: tree
      - name: cat benchmark results
        run: cat benchmarks/${{ matrix.os }}/results.json
      - name: Code Checkout
        uses: actions/checkout@v4
        with:
          ref: benchmark-results
          clean: false
      #- name: git add benchmark results
      #  run: git add benchmarks/${{ matrix.os }}/results.json
      - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        id: commit-and-push
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          add: "benchmarks"
      
          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          # author_name: Author Name
      
          # The email of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          #author_email: mail@example.com
      
          # Additional arguments for the git commit command. The --message argument is already set by the message input.
          # Default: ''
          #commit: --signoff
      
          # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
          # Default: '.'
          #cwd: './path/to/the/repo'
      
          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: github_actor
      
          # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
          # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ. 
          # Default: --tags --force
          #fetch: false
      
          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'Your commit message'
      
          # If this input is set, the action will push the commit to a new branch with this name.
          # Default: ''
          new_branch: benchmark-results
      
          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: exitImmediately
      
          # Arguments for the git pull command. By default, the action does not pull.
          # Default: ''
          #pull: '--rebase --autostash ...'
      
          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # Default: true
          push: true
      - name: fail if outputs.pushed is not true
        run: |
          if [ "${{ steps.commit-and-push.outputs.pushed }}" != "true" ]; then
            echo "Commit failed"
            exit 1
          fi
#      - uses: stefanzweifel/git-auto-commit-action@v5
#        with:
#          # Optional. Commit message for the created commit.
#          # Defaults to "Apply automatic changes"
#          commit_message: "Benchmark results for ${{ matrix.os }}"
#
#          # Optional. Local and remote branch name where commit is going to be pushed
#          #  to. Defaults to the current branch.
#          #  You might need to set `create_branch: true` if the branch does not exist.
#          branch: benchmark-results
#
#          # Optional glob pattern of files which should be added to the commit
#          # Defaults to all (.)
#          # See the `pathspec`-documentation for git
#          # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
#          # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
#          file_pattern: 'benchmarks/**'
#
#          skip_dirty_check : true
#